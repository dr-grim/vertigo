		TTL	mc006		; envelopes,music & filenames data********************************************************************************PW_1_1		DFB	138,204,156,214,159,216,145		DFB	36,111,36,105,53,117,55		DFB	71,5,75,7,80,16,66		DFB	107,46,101,53,116,50,96		DFB	53,124,59,121,57,121,45		DFB	195,143,200,138,202,128,209		DFB	155,217,158,211,131,212,151		DFB	40,100,35,100,41,121,50		DFB	235,169,234,186,234,163,224		DFB	248,180,227,179,242,162,233		DFB	87,4,83,19,95,31,93		DFB	95,10,90,22,66,14,75		DFB	95,9,68,8,71,7,88		DFB	142,223,146,194,146,214,156		DFB	76,25,73,15,69,3,77		DFB	97,52,127,50,120,56,122		DFB	95,28,95,24,91,27,79		DFB	209,152,207,142,200,152,220		DFB	75,29,80,4,90,26,78		DFB	248,189,254,179,240,176,228		DFB	143,198,139,223,129,197,151		DFB	42,113,50,107,45,103,53		DFB	187,253,176,231,171,231,162		DFB	40,108,63,105,36,111,49		DFB	223,155,213,129,202,128,194		DFB	254,189,240,166,236,170,233		DFB	193,135,215,155,208,131,192		DFB	158,207,158,196,131,206,135		DFB	142,196,143,192,136,200,156		DFB	255,182,241,187,248,181,231		DFB	173,255,173,235,170,235,180		DFB	221,140,219,138,199,150,201		DFB	142,200,143,194,146,219,132		DFB	130,194,146,197,137,217,141		DFB	254,178,226,177,252,183,250		DFB	183,247,185,247,188,234,184		DFB	174,226,161,233,164,239,174		DFB	108,43,101,47,123,46,113		DFB	6,65,15,67,23,66,29		DFB	251,160,227,176,252,182,244		DFB	59,105,46,124,45,109,39		DFB	87,29,94,19,68,0,85		DFB	200,132,223,148,213,130,203		DFB	227,182,230,164,227,175,236		DFB	104,36,8,71,109,35,11		DFB	36,100,42,126,59,103,50		DFB	194,130,211,155,214,157,220		DFB	82,18,83,4,73,3,75		DFB	110,59,113,59,113,51,102		DFB	38,118,33,107,33,103,41****************************************		DFB	220,148,215,154,210,131,193	; IANLTD		DFB	68,6,76,10,79,30,89		; CHEATA		DFB	101,55,93,63,95,63,74		; Shades************************************************************************************************************************delete_enemy	LDA	enemy_x		AND	#1		BEQ	Yes_enemy		RTSYes_enemy	LDX	old_EX		LDY	old_EY		LDA	#>screen_store2		STA	restore+1		LDA	#<screen_store2		STA	restore+2		LDA	#2		JSR	restore_area		JSR	setupb2		JMP	nasty_dshad********************************************************************************print_enemy	LDA	enemy_x		AND	#1		BEQ	Yes_enemy2		RTSYes_enemy2	LDX	e_frame		INX		LDA	screen_number		CMP	#5		BNE	notenmyj		CPX	#16		BEQ	resetef		BNE	not_fin_anmnotenmyj	CPX	#14		; No of enemy frames		BNE	not_fin_anmresetef	LDX	#0not_fin_anm	STX	e_frame		LDA	e_blocks		BNE	Skip_ItTry_Again	LDY	e_point		LDA	(pointer4),Y		BNE	Move_not_0		LDA	#4		STA	e_point		BNE	Try_AgainMove_not_0	TAX		AND	#7		STA	e_speed		STA	e_sp_c		TXA		LSR	A		LSR	A		LSR	A		AND	#7		STA	e_blocks		TXA		AND	#192		STA	e_direction		LDA	#16		STA	e_movesSkip_It	INC	e_sp_c		LDA	e_sp_c		CMP	#8		BNE	Speed_not_top		LDA	#8		BNE	Top_sp*		STA	workspace+&F*		JMP	Top_spSpeed_not_top	CMP	#7		BNE	No_move_yet		LDA	#4Top_sp		STA	workspace+&F		LDA	e_speed		STA	e_sp_c		LDA	e_direction		BNE	dir0			; NW???		LDA	enemy_x		SEC		SBC	workspace+&F		STA	enemy_x		BCS	dir_end		DEC	enemy_x+1		BCC	dir_enddir0		CMP	#NE			; NE???		BNE	dir1		LDA	enemy_y		CLC		ADC	workspace+&F		STA	enemy_y		BCC	dir_end		INC	enemy_y+1		BCS	dir_enddir1		CMP	#SW			; SW???		BNE	dir2		LDA	enemy_y		SEC		SBC	workspace+&F		STA	enemy_y		BCS	dir_end		DEC	enemy_y+1		BCC	dir_enddir2		LDA	enemy_x			; SE		CLC		ADC	workspace+&F		STA	enemy_x		BCC	dir_end		INC	enemy_x+1dir_end	LDA	e_moves		LSR	workspace+&F		LSR	workspace+&F		SEC		SBC	workspace+&F		STA	e_moves		BNE	Not0		LDA	#16		STA	e_moves		DEC	e_blocks		BNE	Not0		INC	e_pointNot0No_move_yet	LDA	enemy_x		; calculates pixel offset within		CLC			; bytes of ball ( 0,1,2 or 3 )		ADC	enemy_y		CLC		ADC	#16		LSR	A		LSR	A		AND	#7		STA	workspace+7		STA	ny_pixoffset		LDA	e_frame		AND	#254		ASL	A		ASL	A		LDX	screen_number		CPX	#5		BEQ	jspec1		CLC		ADC	#>nty_dta		STA	workspace+1				LDA	#<nty_dta		ADC	#0		BNE	skipjspec1jspec1		ADC	#>ball_data-1		STA	workspace+1				LDA	#<ball_data-1		ADC	#0		STA	workspace+2		LDY	#7jcloop		LDA	(workspace+1),Y		AND	jewel_data+32,Y		STA	actual_mask,Y		DEY		BPL	jcloop		LDA	#>actual_mask		STA	workspace+1		LDA	#<actual_maskskipjspec1	LDX	#>actual_ball	; pointer to where new ball should		LDY	#<actual_ball	; be stored		JSR	slide_frame	; slide it ?workspace times to the right		LDX	screen_number		CPX	#5		BEQ	jspec2		LDA	#>ball_mask	; pointer to present mask		STA	workspace+1		LDA	#<ball_mask		BNE	skipjspec2jspec2		LDA	#>jewel_masks+32		STA	workspace+1		LDA	#<jewel_masks+32skipjspec2	LDX	#>actual_mask	; pointer to where new mask should		LDY	#<actual_mask	; be stored		JSR	slide_frame	; slide it ?workspace times to the right		JSR	invert_amask		LDX	#3pe_loop1	LDA	enemy_x,X		STA	mem,X		DEX		BPL	pe_loop1		JSR	hi		STA	n_bhi*		PHA*		LDA	workspace+&F		STA	ny_oldY*		PLA		CMP	enemy_z		BCS	not_flying		DEC	enemy_zm		LDA	enemy_z		ADC	enemy_zm		STA	enemy_z		JMP	cont_ennot_flying	LDA	enemy_zm		BPL	not_down		CMP	#248		BCS	not_down		; (or nearly!!!)		EOR	#255		SBC	#1		STA	enemy_zm		LDA	workspace+&F		CLC		ADC	enemy_zm		STA	enemy_z		JSR	bounce		JMP	cont_ennot_down	LDA	workspace+&F		SEC		SBC	enemy_z		STA	enemy_zm		LDA	workspace+&F		STA	enemy_zcont_en	LDX	#4pe_loop2	LDA	enemy_x,X		STA	workspace+&B,X		DEX		BPL	pe_loop2		LDA	old_X		PHA				LDA	old_Y		PHA		JSR	convert_coords		LDX	old_X		LDY	old_Y		PLA		STA	old_Y		PLA		STA	old_X		STX	old_EX		STY	old_EY		LDA	#>screen_store2		STA	save+1		LDA	#<screen_store2		STA	save+2		LDX	old_EX		LDY	old_EY		LDA	#2		JSR	mask_sprite		JSR	setupb3		JMP	nasty_spshad********************************************************************************invert_amask	LDX	#15nymloop	LDA	actual_mask,X		EOR	#255		STA	actual_mask,X		DEX		BPL	nymloop		RTS********************************************************************************		CHN	mc008