		TTL	e.mcdata********************************************************************************	LST	ONzzzzdatast	LST	OFFscreen_store	DS	&10		; = 2 * columns of 8 = blankactual_ball	DS	&10		; = 2 * columns of 8 = blankactual_mask	DS	&10		; = 2 * columns of 8 = blanknty_dta	DS	&38final		DS	&54thatsnot	DS	&5Flb_sprt	DS	&200lb_mask	DS	&20bsp4		DS	&60		; !bsp5		DS	&60		; Home Sweet Homelbsp1		DS	&A0		; backgroundlbsp2		DS	&A0		; where have you been ?lbsp3		DS	&A0		; straight to bed - and no supper !level_data	DS	&1A4B*****************************************	THERE ARE &17 BYTES FREE !!!	*****************************************	LST	ONzzzzeodata	LST	OFFcodeend	RESUME********************************************************************************data_block1	EMBED	&400		; Language workspace; =&400-&7FFblock_mask2	DS	&120		; = blankblock_data2	DS	&120		; = blankjewel_data	DS	&50jewel_masks	DS	&50wipeout_s	DS	&60wipeout_m	DS	&60bsp3		DS	&60		; er ... well,		RESUME********************************************************************************data_block2	EMBED	&380		; = Cassette workspace; =&380-&3DFbsp1		DS	&60		; background		RESUME********************************************************************************data_block3	EMBED	&880		; = Printer buffer; =&880-&8BFball_data	DS	&40		RESUME********************************************************************************data_block4	EMBED	&100		; = unused area of stack; =&100-&170screen_store2	DS	&10		; = 2 * columns of 8  = blankbsp2		DS	&60		; MUM!		RESUME********************************************************************************execute	LDA	#200		LDX	#3		JSR	osbyte		LDA	#&4C		STA	&287		LDA	#&87		STA	&288		LDA	#&02		STA	&289		LDX	#>tape		LDY	#<tape		JSR	oscli	SEI		LDX	#253		TXS		LDX	#0		; downloads main code & data blockdown_lda1	LDA	codestart,Xdown_sta1	STA	codedest,X		INX		BNE	down_lda1		INC	down_lda1+2		INC	down_sta1+2		LDA	down_sta1+2		CMP	#<(codeend+&200)		BLT	down_lda1 * * * * * * * * * * * * * * * * * * * *down_lda2	LDA	data_block1,Xdown_sta2	STA	&400,X		INX		BNE	down_lda2		INC	down_lda2+2		INC	down_sta2+2		LDA	down_sta2+2		CMP	#&8		BNE	down_lda2 * * * * * * * * * * * * * * * * * * * *		LDX	#&60down_loop1	LDA	data_block2-1,X		STA	&380-1,X		DEX		BNE	down_loop1 * * * * * * * * * * * * * * * * * * * *		LDX	#&40down_loop2	LDA	data_block3-1,X		STA	&880-1,X		DEX		BNE	down_loop2 * * * * * * * * * * * * * * * * * * * *		LDX	#0down_loop3	LDA	data_block4,X		STA	&100,X		INX		CPX	#&70		BNE	down_loop3 * * * * * * * * * * * * * * * * * * * *		LDA	#>&6A20-1		STA	workspace		LDA	#<&6A20-1		LDX	#>&5800-1		LDY	#<&5800-1		JSR	move_panel		LDA	#>&6A20+&4B0-1		STA	workspace		LDA	#<&6A20+&4B0-1		LDX	#>&58C8-1		LDY	#<&58C8-1		JSR	move_panel		LDA	#1		STA	old_screen		STA	old_level 		LDA	#>brk		STA	&202		LDA	#<brk		STA	&203		LDA	#26		JSR	oswrch		LDA	#%11000000	; menu status		STA	menu_st	LDA	#0	STA	sound_count	CLI		JMP	exec2********************************************************************************move_panel	STA	workspace+1		STX	workspace+2		STY	workspace+3		LDX	#10mp_loop1	LDY	#15*8mp_loop2	LDA	(workspace),Y		STA	(workspace+2),Y		DEY		BNE	mp_loop2		LDA	workspace		CLC		ADC	#15*8		STA	workspace		LDA	workspace+1		ADC	#0		STA	workspace+1		LDA	workspace+2		ADC	#&40		STA	workspace+2		LDA	workspace+3		ADC	#1		STA	workspace+3		DEX		BNE	mp_loop1		RTS********************************************************************************tape		STR	"T."********************************************************************************		LST	OFF