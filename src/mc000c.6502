;		TTL	mc000c		; All sprite/screen routines that poke
					; directly to the shadow screen memory
;****************************************
;****************************************

top		=	&3140

pntr1		=	workspace
pntr2		=	workspace+2
max_width	=	workspace+4
counter	=	workspace+5
lines		=	workspace+6
v_frame	=	workspace+7
temp_offset	=	workspace+8

;* * * * * * * * * * * * * * * * * * * *

.clocked1	INC	pntr1+1
		LDA	counter
		ORA	#128
		STA	counter
		BRA	not_clocked1

;* * * * * * * * * * * * * * * * * * * *

.clocked2	DEC	pntr2+1
		LDA	counter
		ORA	#64
		STA	counter
		BRA	not_clocked2

;****************************************

.venetian	STZ	v_frame

		SHADOW	ON,IN

.vml		JSR	delay_19

		LDA	#LO(top)
		CLC
		ADC	v_frame
		STA	pntr1
		LDA	#HI(top)
		ADC	#0
		STA	pntr1+1
		LDA	#LO(top-&100)
		CLC
		ADC	v_frame
		STA	pntr2
		LDA	#HI(top-&100)
		ADC	#0
		STA	pntr2+1

		LDA	v_frame
		CMP	#7
		BCC	not_7

		LDA	#4
		BRA	add_tmw

.not_7		CMP	#4
		BCC	not_4

		LDA	#3
		BRA	add_tmw

.not_4		CMP	#1
		BCC	not_1

		LDA	#2
		BRA	add_tmw

.not_1		LDA	#1

.add_tmw	CLC
		ADC	#3
		STA	max_width
		STA	temp_offset

		STZ	counter
		STZ	lines

;* * * * * * * * * * * * * * * * * * * *

.vouter_loop	LDY	#0
		LDX	max_width

.vloop1		LDA	#0
		STA	(pntr1),Y
		TYA
		CLC
		ADC	#8
		TAY
		BCS	clocked1
.not_clocked1	DEX
		BNE	vloop1

;* * * * * * * * * * * * * * * * * * * *

		LDY	#248
		LDX	max_width

.vloop2		LDA	#0
		STA	(pntr2),Y
		TYA
		SEC
		SBC	#8
		TAY
		BCC	clocked2
.not_clocked2	DEX
		BNE	vloop2

;* * * * * * * * * * * * * * * * * * * *

		LDA	counter
		AND	#128
		BEQ	no_add21

		LDA	counter
		AND	#1+2+4+8+16+32+64+000
		STA	counter
		DEC	pntr1+1

.no_add21	LDA	pntr1
		CLC
		ADC	#LO(&280)
		STA	pntr1
		LDA	pntr1+1
		ADC	#HI(&280)
		STA	pntr1+1

;* * * * * * * * * * * * * * * * * * * *

		LDA	counter
		AND	#64
		BEQ	no_add22

		LDA	counter
		AND	#1+2+4+8+16+32+00+128
		STA	counter
		INC	pntr2+1

.no_add22	LDA	pntr2
		CLC
		ADC	#LO(&280)
		STA	pntr2
		LDA	pntr2+1
		ADC	#HI(&280)
		STA	pntr2+1

;* * * * * * * * * * * * * * * * * * * *

.no_extra2	LDA	counter
		AND	#48
		BNE	not_top
		INC	counter

;* * * * * * * * * * * * * * * * * * * *

		LDA	max_width
		CLC
		ADC	#3
		STA	max_width

		LDA	max_width
		CMP	#40
		BCS	nol_1
		JMP	vouter_loop

.nol_1		LDA	counter
		AND	#1+2+4+8+00+00+64+128
		ORA	#16
		STA	counter
		LDA	#40
		STA	max_width
		STZ	lines
		BRA	no_extra2

;* * * * * * * * * * * * * * * * * * * *

.not_top	CMP	#16
		BNE	not_middle
		INC	lines
		LDA	lines
		CMP	#9
		BEQ	nol_2

		JMP	vouter_loop

.nol_2		LDA	counter
		AND	#0+0+0+8+00+00+64+128
		ORA	#32
		STA	counter
		LDA	temp_offset
		CMP	#7
		BNE	not_sec7

		LDA	#4
		STA	temp_offset

.not_sec7	LDA	#46
		SEC
		SBC	temp_offset
		STA	max_width
		BRA	no_extra2

;* * * * * * * * * * * * * * * * * * * *

.not_middle	INC	counter

		LDA	max_width
		SEC
		SBC	#3
		STA	max_width

		LDA	pntr1+1
		CMP	#&7F
		BCS	nol_3

		JMP	vouter_loop

.nol_3		INC	v_frame
		LDA	v_frame
		CMP	#8
		BEQ	exit

		JMP	vml

.exit		SHADOW	ON,OUT
		RTS

;****************************************
;****************************************

.delay_19	LDA	#19
		JSR	osbyte
		JSR	osbyte
		JSR	osbyte

		SHADOW	ON,OUT
		JSR	code
		SHADOW	ON,IN

		RTS

;****************************************
;****************************************

b_or_screen	=	workspace
b_or_width	=	workspace+2
b_or_height	=	workspace+3

b_screen	=	workspace+4
b_width	=	workspace+6
b_height	=	workspace+7
.b_chk	SKIP	1

;****************************************

.box		STX	b_or_width
		STY	b_or_height

		STZ	b_chk

		LDA	b_or_screen	; byte X = char X * 2
		ASL	A
		TAX

.box2		LDA	b_or_screen+1	; byte Y - char Y * 8
		ASL	A
		ASL	A
		ASL	A
		TAY

		JSR	calculate_byte

		LDA	b_or_screen
		STA	b_screen
		LDA	b_or_screen+1
		STA	b_screen+1
		LDA	b_or_width
		STA	b_width
		STZ	b_height

		SHADOW	ON,IN

		LDY	#15
.b_loop1	LDA	(b_screen),Y
		AND	bs_tl_mask,Y
		ORA	bs_top_left,Y
		STA	(b_screen),Y
		DEY
		BPL	b_loop1

		LDA	b_screen
		CLC
		ADC	#16
		STA	b_screen
		LDA	b_screen+1
		ADC	#0
		STA	b_screen+1

.b_loop2out	LDY	#15
.b_loop2	LDA	bs_horiz,Y
		STA	(b_screen),Y		
		DEY
		BPL	b_loop2

		LDA	b_screen
		CLC
		ADC	#16
		STA	b_screen
		LDA	b_screen+1
		ADC	#0
		STA	b_screen+1

		DEC	b_width
		BNE	b_loop2out

		LDA	b_chk
		BEQ	b_n1

		LDA	b_screen
		SEC
		SBC	#8
		STA	b_screen
		LDA	b_screen+1
		SBC	#0
		STA	b_screen+1

.b_n1		LDY	#15
.b_loop3	LDA	(b_screen),Y
		AND	bs_tr_mask,Y
		ORA	bs_top_right,Y
		STA	(b_screen),Y
		DEY
		BPL	b_loop3

		LDA	b_or_screen
		CLC
		ADC	#LO(&280)
		STA	b_screen		
		LDA	b_or_screen+1
		ADC	#HI(&280)
		STA	b_screen+1

;* * * * * * * * * * * * * * * * * * * *

.b_ml		LDA	b_or_width
		STA	b_width

		LDY	#15

.b_mloop1	LDA	bs_verti,Y
		STA	(b_screen),Y
		DEY
		BPL	b_mloop1

		LDA	b_screen
		CLC
		ADC	#16
		STA	b_screen
		LDA	b_screen+1
		ADC	#0
		STA	b_screen+1

.b_mloop2out	LDY	#15
.b_col		LDA	#0
.b_mloop2	STA	(b_screen),Y		
		DEY
		BPL	b_mloop2

		LDA	b_screen
		CLC
		ADC	#16
		STA	b_screen
		LDA	b_screen+1
		ADC	#0
		STA	b_screen+1

		DEC	b_width
		BNE	b_mloop2out

		LDA	b_chk
		BEQ	b_n2

		LDA	b_screen
		SEC
		SBC	#8
		STA	b_screen
		LDA	b_screen+1
		SBC	#0
		STA	b_screen+1

.b_n2		LDY	#15
.b_mloop3	LDA	bs_verti,Y
		STA	(b_screen),Y
		DEY
		BPL	b_mloop3

		INC	b_height

		LDA	b_or_screen
		STA	b_screen
		LDA	b_or_screen+1
		STA	b_screen+1

		LDX	b_height

.b_add_loop	LDA	b_screen
		CLC
		ADC	#LO(&280)
		STA	b_screen		
		LDA	b_screen+1
		ADC	#HI(&280)
		STA	b_screen+1
		DEX
		BPL	b_add_loop

		LDA	b_height
		CMP	b_or_height
		BEQ	b_do_bottom

		JMP	b_ml

;* * * * * * * * * * * * * * * * * * * *

.b_do_bottom	LDA	b_or_width
		STA	b_width

		LDY	#15

.b_bloop1	LDA	(b_screen),Y
		AND	bs_bl_mask,Y
		ORA	bs_bttm_left,Y
		STA	(b_screen),Y
		DEY
		BPL	b_bloop1

		LDA	b_screen
		CLC
		ADC	#16
		STA	b_screen
		LDA	b_screen+1
		ADC	#0
		STA	b_screen+1

.b_bloop2out	LDY	#15
.b_bloop2	LDA	bs_horiz,Y
		STA	(b_screen),Y		
		DEY
		BPL	b_bloop2

		LDA	b_screen
		CLC
		ADC	#16
		STA	b_screen
		LDA	b_screen+1
		ADC	#0
		STA	b_screen+1

		DEC	b_width
		BNE	b_bloop2out

		LDA	b_chk
		BEQ	b_n3

		LDA	b_screen
		SEC
		SBC	#8
		STA	b_screen
		LDA	b_screen+1
		SBC	#0
		STA	b_screen+1

.b_n3		LDY	#15
.b_bloop3	LDA	(b_screen),Y
		AND	bs_br_mask,Y
		ORA	bs_bttm_right,Y
		STA	(b_screen),Y
		DEY
		BPL	b_bloop3

.exit_box	SHADOW	ON,OUT
		RTS

;****************************************
;****************************************

.bs_top_left	EQUB	%00000000
		EQUB	%00000001
		EQUB	%00010010
		EQUB	%00110100
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101

		EQUB	%00000000
		EQUB	%00001111
		EQUB	%11110000
		EQUB	%11111111
		EQUB	%11111111
		EQUB	%11111100
		EQUB	%11101001
		EQUB	%11001010

.bs_tl_mask	EQUB	%11101110
		EQUB	%11001100
		EQUB	%10001000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000

		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000

.bs_horiz	EQUB	%00000000
		EQUB	%00001111
		EQUB	%11110000
		EQUB	%11111111
		EQUB	%11111111
		EQUB	%11110000
		EQUB	%00001111
		EQUB	%00000000

		EQUB	%00000000
		EQUB	%00001111
		EQUB	%11110000
		EQUB	%11111111
		EQUB	%11111111
		EQUB	%11110000
		EQUB	%00001111
		EQUB	%00000000

.bs_top_right	EQUB	%00000000
		EQUB	%00001111
		EQUB	%11110000
		EQUB	%11111111
		EQUB	%11111111
		EQUB	%11110011
		EQUB	%01111001
		EQUB	%00110101

		EQUB	%00000000
		EQUB	%00001000
		EQUB	%10000100
		EQUB	%11000010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010

.bs_tr_mask	EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000

		EQUB	%01110111
		EQUB	%00110011
		EQUB	%00010001
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000


.bs_verti	EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101

		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010

.bs_bttm_left	EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110101
		EQUB	%00110100
		EQUB	%00010010
		EQUB	%00000001
		EQUB	%00000000

		EQUB	%11001010
		EQUB	%11101001
		EQUB	%11111100
		EQUB	%11111111
		EQUB	%11111111
		EQUB	%11110000
		EQUB	%00001111
		EQUB	%00000000

.bs_bl_mask	EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%10001000
		EQUB	%11001100
		EQUB	%11101110

		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000


.bs_bttm_right	EQUB	%00110101
		EQUB	%01111001
		EQUB	%11110011
		EQUB	%11111111
		EQUB	%11111111
		EQUB	%11110000
		EQUB	%00001111
		EQUB	%00000000

		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11001010
		EQUB	%11000010
		EQUB	%10000100
		EQUB	%00001000
		EQUB	%00000000

.bs_br_mask	EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000

		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00000000
		EQUB	%00010001
		EQUB	%00110011
		EQUB	%01110111

;****************************************
;****************************************

;		CHN	mc000d
