;		TTL	mc009b		; Handles all password code

;****************************************
;****************************************

.password
;*		LDA	controller
;*		AND	#128
;*		BEQ	type_in_PW
;*
;*		RTS
;*
;*	**************************
;*
;*type_in_PW

		LDA	pointer4
		PHA
		LDA	pointer4+1
		PHA

		LDY	#6
		LDA	#32
.Pblank		STA	PW,Y		; Fill your HS plice with spaces
		DEY
		BPL	Pblank

		LDX	#LO(PWtxt)
		LDY	#HI(PWtxt)
		JSR	print_pwtxt

		LDA	#11
		LDX	#0
		JSR	osbyte


		LDX	#4
		LDY	#29
		JSR	move_cursor


		STZ	workspace	; Type in password routine

		LDA	#21
		LDX	#0
		LDY	#0
		JSR	osbyte

.all_here	JSR	code		; Call Tune
		LDX	#1
		LDY	#0
		LDA	#&81
		JSR	osbyte		; Read key(in X centiseconds)
		CPY	#&1B
		BNE	nEsc		; Escape hit?(if not skip next lines)
		LDA	#&7E
		JSR	osbyte		; Acknowledge Escape
		BRA	all_here	; Try 'gain

.nEsc		CPY	#255
		BEQ	all_here	; Time-Out...Try 'gain
		LDA	workspace
		CPX	#13		; RETURN?
		BEQ	PW_fin
		CMP	#6
		BNE	skipbit		; End of password?
		CPX	#127		; DELETE?
		BEQ	skipbit
		BRA	all_here

.skipbit	CPX	#32
		BCC	all_here	; Is char<32
		CPX	#128
		BCS	all_here	; or >127
		CPX	#127		; DELETE?
		BEQ	Delete_hit
		LDA	workspace
		CMP	#6
		BEQ	all_here
		TAY
		TXA
		STA	PW,Y
		JSR	oswrch
		INC	workspace
		BRA	all_here

.Delete_hit	LDA	workspace
		BEQ	all_here
		TAY
		LDA	#32
		STA	PW,Y
		DEC	workspace
		LDA	#127
		JSR	oswrch
		LDA	#46
		JSR	oswrch
		LDA	#8
		JSR	oswrch
		BRA	all_here

.PW_fin		LDX	#0		; Screen counter ( 0 to 50 )

.PW2		LDY	#0		; Character Counter ( 0 to 5 )

		STX	workspace

		TXA
		ASL	A
		TAX

		LDA	PW_lookup,X
		STA	pointer4

		LDA	PW_lookup+1,X
		STA	pointer4+1

.PW1		LDA	PW,Y
		STY	workspace+4
		STA	workspace+6
		TAX
		TYA
		INA
		EOR	workspace+6
		INY
		STA	workspace+5
		LDA	(pointer4),Y
		EOR	workspace+5

		LDX	workspace+5
		TAY
		TXA
		EOR	workspace+6
		EOR	workspace+5
		TYA
		LDY	workspace+4

		CMP	(pointer4),Y

		BNE	nextPW

		INY
		CPY	#6
		BNE	PW1

;****************************************
;*					*
;*	PASSWORD MATCHES SCREEN X	*
;*					*
;****************************************

		LDX	workspace
		LDY	#1

.PW5		CPX	#10
		BLT	PW6

		INY
		TXA
		SEC
		SBC	#10
		TAX

		BRA	PW5

.PW6		CPY	#6
		BEQ	cheat_mode

		INX
		STX	screen_number
		STY	level_number

		LDA	controller
		ORA	#2
		STA	controller

		JSR	reset_status

		LDX	#LO(PWtxt3)
		LDY	#HI(PWtxt3)
		JSR	print_pwtxt

		JSR	ting

		BRA	PW4

;****************************************

.nextPW		INC	workspace	; ***** ALTER THIS LINE IF *****
		LDX	workspace	; ***** YOU CHANGE THE NO. *****
		CPX	#58		; *****  OF PASSWORDS !!!  *****
		BEQ	not_PW2

		JMP	PW2

.not_PW2	LDX	#LO(PWtxt2)
		LDY	#HI(PWtxt2)
		JSR	print_pwtxt

		JSR	code

		LDA	#0
		JMP	exit_pass

.PW4		JSR	code		; Keep the ol' music going ...

		LDA	#255
		JMP	exit_pass

;****************************************
;****************************************

.cheat_mode	CPX	#1
		BNE	real_cheat

		LDX	#>cheat_text2
		LDY	#<cheat_text2
		JSR	print_pwtxt

		LDA	menu_st
		AND	#3
		ORA	#2
		STA	menu_st

		STZ	lives

		JMP	exit_pass99

.real_cheat	CPX	#0
		BNE	not_real_cheat

		LDX	#>cheat_text
		LDY	#<cheat_text
		JSR	print_pwtxt

		LDA	controller
		ORA	#1
		STA	controller

		LDA	#5
		STA	lives

		JMP	exit_pass99

.not_real_cheat	CPX	#2
		BNE	not_mascot

		LDX	#>mascot_text
		LDY	#<mascot_text
		JSR	print_pwtxt

		STZ	timer1
		LDA	#255
		STA	timer2
		STZ	evframe_num

		BRA	exit_pass99

.not_mascot	CPX	#3
		BNE	not_sounds

		LDX	#>sounds_text
		LDY	#<sounds_text
		JSR	print_pwtxt

		JSR	ting
		LDA	#200
		JSR	key_delay

		JSR	bounce
		LDA	#200
		JSR	key_delay

		JSR	ting_v2
		LDA	#200
		JSR	key_delay

		JSR	piff
		LDA	#200
		JSR	key_delay

		JSR	paff
		LDA	#200
		JSR	key_delay

		BRA	exit_pass99

.not_sounds	CPX	#4
		BNE	not_guess

		LDX	#>guess_text
		LDY	#<guess_text
		JSR	print_pwtxt

		BRA	exit_pass99

.not_guess	CPX	#5
		BNE	not_freddy

		LDX	#>freddy_text
		LDY	#<freddy_text
		JSR	print_pwtxt

		BRA	exit_pass99

.not_freddy	CPX	#6
		BNE	not_silly

		LDX	#>silly_text
		LDY	#<silly_text
		JSR	print_pwtxt

		BRA	exit_pass99

.not_silly
;*	CPX	#7
;*		BNE	not_silly2

		LDX	#>silly_text2
		LDY	#<silly_text2
		JSR	print_pwtxt

;*		BRA	exit_pass99
;*
;*not_silly2	CPX	#8
;*		BNE	exit_pass99
;*
;*		JSR	test_animbits
;*		BRA	exit_pass

.exit_pass99

;*	JSR	ting

		LDA	#0

.exit_pass	PLX
		STX	pointer4+1
		PLX
		STX	pointer4

		RTS

;****************************************
;****************************************

.print_password	LDX	#4
		LDY	#29
		JSR	move_cursor

.pp_bra1	LDX	level_number
		LDA	screen_number
		DEA
		CLC

.pp_loop2	DEX
		BEQ	pp_bra2

		ADC	#10
		BRA	pp_loop2

.pp_bra2	ASL	A
		TAX
		LDA	PW_lookup,X
		STA	pointer4
		LDA	PW_lookup+1,X
		STA	pointer4+1

		LDY	#0
		
.pp_loop3	LDA	(pointer4),Y
		TAX
		STA	workspace
		TYA
		INA
		EOR	workspace
		STA	workspace+1
		TXA
		STY	workspace+2
		INY
		TXA
		LDA	(pointer4),Y
		EOR	workspace+1
		AND	#255
		STA	workspace
		TAX
		ORA	workspace

		JSR	oswrch
		LDY	workspace+2
		INY
		CPY	#6
		BNE	pp_loop3

		LDX	workspace

		RTS

;****************************************
;****************************************

.print_pwtxt	STX	ppt_loop+1
		STY	ppt_loop+2

		LDX	#4
		LDY	#29
		JSR	move_cursor

		LDY	#0

.ppt_loop	LDA	&FFFF,Y
		JSR	oswrch
		INY
		CPY	#6
		BLT	ppt_loop

		RTS

;****************************************
;****************************************

.PW		EQUS	"1234567"

.demo_text	EQUS	"*DEMO*"
.pause_text	EQUS	"PAUSED"

.PWtxt		EQUS	"......"
.PWtxt2		EQUS	"NOPE.."
.PWtxt3		EQUS	"<OKAY>"

.cheat_text	EQUS	"TutTut"
.cheat_text2	EQUS	"HurHur"
.mascot_text	EQUS	"Thingy"
.sounds_text	EQUS	"Noisy!"
.guess_text	EQUS	"Go on!"
.freddy_text	EQUS	"t'flea"
.silly_text	EQUS	"OhHaHa"
.silly_text2	EQUS	"No,no!"

;****************************************
;****************************************

;		CHN	mc010
