;		TTL	mcload		; Loading machine code

;****************************************

;		EXEC	execute

;****************************************
;****************************************
					; Use SHADOW <ON/OFF/IN/OUT>
;SHADOW		MACRO			; switches main 20k bank in & out
;					; of memory
;		LDA	#@1+@2
;		STA	accreg
;
;		ENDM

;****************************************
;****************************************

;LOAD		MACRO			; LOAD <string_location>
;					; ( Does OSCLI <string> )
;		LDX	#>@1
;		LDY	#<@1
;		JSR	oscli
;
;		ENDM

;****************************************
;****************************************

;RUN		MACRO			; RUN <string_location>
;					; ( Does OSCLI <string> )
;		LDX	#>@1
;		LDY	#<@1
;		JMP	oscli
;
;		ENDM

;****************************************
;****************************************

;CHANGE		MACRO
		MACRO CHANGE fromcol, tocol

		LDA	#19
		JSR	oswrch
		LDA	#fromcol
		JSR	oswrch
		LDA	#tocol
		JSR	oswrch
		LDA	#0
		JSR	oswrch
		JSR	oswrch
		JSR	oswrch

		ENDMACRO

;****************************************
;****************************************

;OFF		=	0
;ON		=	1+2
;OUT		=	0
;IN		=	4

;****************************************

;oswrch		EQU	&FFEE
;osbyte		EQU	&FFF4
;oscli		EQU	&FFF7

;romsel		EQU	&FE30
;romevn		EQU	&F4
;accreg		EQU	&FE34

;****************************************
;****************************************

load_workspace	=	&70

;****************************************
;****************************************

		ORG	&400

.loader_code_start
.loader_code_execute
{
		; Treat escape key as an ASCII code
		LDA	#229
		LDX	#1
		LDY	#0
		JSR	osbyte

		; MODE 129 (MODE 1 in shadow memory)
		LDA	#22
		JSR	oswrch
		LDA	#129
		JSR	oswrch

		; Turn cursor off (VDU 23,0,10,32;0;0;0)
		LDA	#23
		JSR	oswrch
		LDA	#0
		JSR	oswrch
		LDA	#10
		JSR	oswrch
		LDA	#32
		JSR	oswrch
		LDA	#0
		JSR	oswrch
		JSR	oswrch
		JSR	oswrch
		JSR	oswrch
		JSR	oswrch
		JSR	oswrch

		; Set all colours to black
		CHANGE	1,0
		CHANGE	2,0
		CHANGE	3,0

		SHADOW	ON,IN
		OSCLI	load_title_page
		SHADOW	ON,OUT

		; Colours set to red, yellow and white
		CHANGE	1,1
		CHANGE	2,3
		CHANGE	3,7

		OSCLI	load_bank4
  		
		OSCLI	load_bank5

;*		STZ	load_workspace+1
;*		STZ	load_workspace+2
;*
;*		LDA	#20
;*		STA	load_workspace
;*
;*d_loop		DEC	load_workspace+2
;*		BNE	d_loop
;*
;*		DEC	load_workspace+1
;*		BNE	d_loop
;*
;*		DEC	workspace
;*		BNE	d_loop

		OSCLI	load_title_page
		SHADOW	OFF,OUT

		SHADOW	OFF,IN
		OSCLI	load_panel1

		LDA	#LO(&4B80)
		STA	load_workspace
		LDA	#HI(&4B80)
		STA	load_workspace+1

		LDY	#0

.cls_loop1	LDA	#0
.cls_loop2	STA	(load_workspace),Y
		INY
		BNE	cls_loop2

		INC	load_workspace+1
		LDA	load_workspace+1
		CMP	#&65
		BLT	cls_loop1

		OSCLI	load_panel2
		SHADOW	ON,OUT

		OSCLI	run_main_game

;****************************************
;****************************************

.load_title_page	EQUS	"LOAD title 3000", &0D

.load_bank4		EQUS	"SRLOAD bank4 8000 4 Q", &0D
.load_bank5		EQUS	"SRLOAD bank5 8000 5 Q", &0D

.load_panel1		EQUS	"LOAD panel1 3000", &0D
.load_panel2		EQUS	"LOAD panel2 6480", &0D

.run_main_game	EQUS	"RUN mcode", &0D

;****************************************
;****************************************
}
.loader_code_end